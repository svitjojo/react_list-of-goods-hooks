{"version":3,"sources":["types/SortType.ts","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","reverse","NONE","sortType","setSortType","isResetButton","visibleGoods","goods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,2EAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,gBCSCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCK,IAAMC,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAgBF,IAAaP,EAASM,MAAQF,EAC9CM,EAlCD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOC,GAuBzB,OArBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKP,EAASe,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKhB,EAASiB,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,KAAKd,EAASM,KACd,QACE,OAAO,MAITF,GACFM,EAAaL,UAIfc,QAAQC,IAAIb,EAAUH,GAEfM,EAOcW,CACnBpB,EACA,CAAEG,aAAYG,aAOhB,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaP,EAASiB,WAEtCQ,QAAS,kBACPjB,EAAYR,EAASiB,WAPzB,iCAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaP,EAASe,SAEtCU,QAAS,kBACPjB,EAAYR,EAASe,SAPzB,4BAaA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAAS,kBAAMpB,GAASD,IAN1B,qBAYEK,GACE,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAlDE,WACZpB,GAAQ,GACRG,EAAYR,EAASM,OA6Cb,sBAWN,6BACGI,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c200ed56.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { SortType } from './types/SortType';\nimport { ReorderOptions } from './types/ReorderOptions';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, reverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isResetButton = sortType !== SortType.NONE || isReversed;\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n  const reset = () => {\n    reverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => (\n            setSortType(SortType.ALPHABET)\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => (\n            setSortType(SortType.LENGTH)\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => reverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {\n          isResetButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}